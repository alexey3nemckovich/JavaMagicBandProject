package main.com.bsuir.autoservice.bean.impl;

import main.com.bsuir.autoservice.bean.Bean;
import main.com.bsuir.autoservice.bean.exception.BeanException;
import main.com.bsuir.autoservice.bean.impl.backup.discount;
import main.com.bsuir.autoservice.library.type.date.SimpleDate;

import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

public class car extends Bean{

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Integer getId_status() {
        return id_status;
    }

    public void setId_status(Integer id_status) {
        this.id_status = id_status;
    }

    public SimpleDate getLast_inspection() {
        return last_inspection;
    }

    public void setLast_inspection(SimpleDate last_inspection) {
        this.last_inspection = last_inspection;
    }

    public String getRegister_number() {
        return register_number;
    }

    public void setRegister_number(String register_number) {
        this.register_number = register_number;
    }

    public String getRegister_region() {
        return register_region;
    }

    public void setRegister_region(String register_region) {
        this.register_region = register_region;
    }

    public String getFull_register_number() {
        return full_register_number;
    }

    public void setFull_register_number(String full_register_number) {
        this.full_register_number = full_register_number;
    }

    @Override
    public Field[] getFieldsOrdered() throws BeanException {
        try {
            Class type = this.getClass();
            Field[] fields = {
                    type.getDeclaredField("id"),
                    type.getDeclaredField("id_status"),
                    type.getDeclaredField("last_inspection"),
                    type.getDeclaredField("register_number"),
                    type.getDeclaredField("register_region"),
                    type.getDeclaredField("full_register_number"),
            };
            for (Field field: fields) {
                field.setAccessible(true);
            }
            return fields;
        }catch (Exception e){
            throw new BeanException(e);
        }
    }

    public List<String> getAutoGeneratedFields() throws BeanException{
        List<String> strings = new ArrayList<>();
        strings.add("id");
        strings.add("full_register_number");
        return strings;
    }

    @Override
    public car setFields(Map<String, String> fieldValues) throws BeanException{
        try {
            id = Integer.valueOf(fieldValues.get("id"));
            id_status = Integer.valueOf(fieldValues.get("id_status"));
            last_inspection = new SimpleDate(fieldValues.get("last_inspection"));
            register_number = fieldValues.get("register_number");
            register_region = fieldValues.get("register_region");
            full_register_number = fieldValues.get("full_register_number");
            return this;
        }catch (Exception e){
            throw new BeanException(e);
        }
    }

    private Integer id;
    private Integer id_status;
    private SimpleDate last_inspection;
    private String register_number;
    private String register_region;
    private String full_register_number;
}
