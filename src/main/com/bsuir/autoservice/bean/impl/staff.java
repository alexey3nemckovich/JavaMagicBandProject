package main.com.bsuir.autoservice.bean.impl;

import main.com.bsuir.autoservice.bean.Bean;
import main.com.bsuir.autoservice.bean.exception.BeanException;
import main.com.bsuir.autoservice.bean.impl.backup.discount;
import main.com.bsuir.autoservice.library.type.date.SimpleDate;

import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

public class staff extends Bean{

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Integer getId_user() {
        return id_user;
    }

    public void setId_user(Integer id_user) {
        this.id_user = id_user;
    }

    public Integer getId_shop() {
        return id_shop;
    }

    public void setId_shop(Integer id_shop) {
        this.id_shop = id_shop;
    }

    public Integer getId_position() {
        return id_position;
    }

    public void setId_position(Integer id_position) {
        this.id_position = id_position;
    }

    public SimpleDate getEmployment_time() {
        return employment_time;
    }

    public void setEmployment_time(SimpleDate employment_time) {
        this.employment_time = employment_time;
    }

    @Override
    public Field[] getFieldsOrdered() throws BeanException {
        try {
            Class type = this.getClass();
            Field[] fields = {
                    type.getDeclaredField("id"),
                    type.getDeclaredField("id_user"),
                    type.getDeclaredField("id_shop"),
                    type.getDeclaredField("id_position"),
                    type.getDeclaredField("employment_time"),
            };
            for (Field field: fields) {
                field.setAccessible(true);
            }
            return fields;
        }catch (Exception e){
            throw new BeanException(e);
        }
    }

    public List<String> getAutoGeneratedFields() throws BeanException{
        List<String> strings = new ArrayList<>();
        strings.add("id");
        return strings;
    }

    @Override
    public staff setFields(Map<String, String> fieldValues) throws BeanException{
        try {
            id = Integer.valueOf(fieldValues.get("id"));
            id_user = Integer.valueOf(fieldValues.get("id_user"));
            id_shop = Integer.valueOf(fieldValues.get("id_shop"));
            id_position = Integer.valueOf(fieldValues.get("id_position"));
            employment_time = new SimpleDate(fieldValues.get("employment_time"));
            return this;
        }catch (Exception e){
            throw new BeanException(e);
        }
    }

    private Integer id;
    private Integer id_user;
    private Integer id_shop;
    private Integer id_position;
    private SimpleDate employment_time;
}
