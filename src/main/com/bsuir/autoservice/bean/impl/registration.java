package main.com.bsuir.autoservice.bean.impl;

import main.com.bsuir.autoservice.bean.Bean;
import main.com.bsuir.autoservice.bean.exception.BeanException;


import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

public class registration extends Bean{

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getEmail_user() {
        return email_user;
    }

    public void setEmail_user(String email_user) {
        this.email_user = email_user;
    }

    public String getEmail_domen() {
        return email_domen;
    }

    public void setEmail_domen(String email_domen) {
        this.email_domen = email_domen;
    }

    public String getFull_email() {
        return full_email;
    }

    public void setFull_email(String full_email) {
        this.full_email = full_email;
    }

    public String getLogin() {
        return login;
    }

    public void setLogin(String login) {
        this.login = login;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @Override
    public Field[] getFieldsOrdered() throws BeanException {
        try {
            Class type = this.getClass();
            Field[] fields = {
                    type.getDeclaredField("id"),
                    type.getDeclaredField("email_user"),
                    type.getDeclaredField("email_domen"),
                    type.getDeclaredField("full_email"),
                    type.getDeclaredField("login"),
                    type.getDeclaredField("password"),
            };
            for (Field field: fields) {
                field.setAccessible(true);
            }
            return fields;
        }catch (Exception e){
            throw new BeanException(e);
        }
    }

    public List<String> getAutoGeneratedFields() throws BeanException{
        List<String> strings = new ArrayList<>();
        strings.add("id");
        strings.add("full_email");
        return strings;
    }

    @Override
    public registration setFields(Map<String, String> fieldValues) {
        id = Integer.valueOf(fieldValues.get("id"));
        email_user = fieldValues.get("email_user");
        email_domen = fieldValues.get("email_domen");
        full_email = fieldValues.get("full_email");
        login = fieldValues.get("login");
        password = fieldValues.get("password");
        return this;
    }

    private Integer id;
    private String email_user;
    private String email_domen;
    private String full_email;
    private String login;
    private String password;
}
