package main.com.bsuir.autoservice.bean.impl;

import main.com.bsuir.autoservice.bean.Bean;
import main.com.bsuir.autoservice.bean.exception.BeanException;

import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;

public class Share extends Bean<Integer> {
    public enum State{
        ACTIVE, EXPIRED
    }

    @Override
    public Integer getId(){
        return id;
    }

    public void setId(int value){
        this.id = value;
    }

    public Date getDateStart(){
        return date_start;
    }

    public void setDateStart(Date value){
        this.date_start = value;
    }

    public Date getDateEnd(){
        return date_end;
    }

    public void setDateEnd(Date value){
        this.date_end = value;
    }

    public int getValue(){
        return value;
    }

    public void setValue(int value){
        this.value = value;
    }

    public String getDescription(){
        return description;
    }

    public void setDescription(String value){
        this.description = value;
    }

    public State getState(){
        return state;
    }

    public void setState(State value){
        this.state = value;
    }

    @Override
    public Field[] getFieldsOrdered() throws BeanException {
        try {
            Class type = this.getClass();
            Field[] fields = {
                    type.getDeclaredField("id"),
                    type.getDeclaredField("date_start"),
                    type.getDeclaredField("date_end"),
                    type.getDeclaredField("value"),
                    type.getDeclaredField("description"),
                    type.getDeclaredField("state")
            };
            for (Field field: fields) {
                field.setAccessible(true);
            }
            return fields;
        }catch (Exception e){
            throw new BeanException(e);
        }
    }

    public List<String> getAutoGeneratedFields() throws BeanException{
        List<String> strings = new ArrayList<>();
        strings.add("id");
        return strings;
    }

    @Override
    public Share setFields(Map<String, String> fieldValues) throws BeanException{
        try {
            id = Integer.valueOf(fieldValues.get("id"));
            date_start = tryParseDate(fieldValues.get("date_start"));
            date_end = tryParseDate(fieldValues.get("date_end"));
            value = Integer.valueOf(fieldValues.get("value"));
            description = fieldValues.get("description");
            state = State.valueOf(fieldValues.get("state"));
            return this;
        }catch (Exception e){
            throw new BeanException(e);
        }
    }

    private Integer id;
    private Date date_start;
    private Date date_end;
    private Integer value;
    private String description;
    private State state;
}
