package main.com.bsuir.autoservice.bean.impl;

import main.com.bsuir.autoservice.bean.Bean;
import main.com.bsuir.autoservice.bean.exception.BeanException;

import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

public class user extends Bean{

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Integer getId_registration() {
        return id_registration;
    }

    public void setId_registration(Integer id_registration) {
        this.id_registration = id_registration;
    }

    public Integer getId_type() {
        return id_type;
    }

    public void setId_type(Integer id_type) {
        this.id_type = id_type;
    }

    public Integer getId_phone() {
        return id_phone;
    }

    public void setId_phone(Integer id_phone) {
        this.id_phone = id_phone;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getLast_name() {
        return last_name;
    }

    public void setLast_name(String last_name) {
        this.last_name = last_name;
    }

    public String getFull_name() {
        return full_name;
    }

    public void setFull_name(String full_name) {
        this.full_name = full_name;
    }

    @Override
    public Field[] getFieldsOrdered() throws BeanException {
        try {
            Class type = this.getClass();
            Field[] fields = {
                    type.getDeclaredField("id"),
                    type.getDeclaredField("id_registration"),
                    type.getDeclaredField("id_type"),
                    type.getDeclaredField("id_phone"),
                    type.getDeclaredField("name"),
                    type.getDeclaredField("last_name"),
                    type.getDeclaredField("full_name"),
            };
            for (Field field: fields) {
                field.setAccessible(true);
            }
            return fields;
        }catch (Exception e){
            throw new BeanException(e);
        }
    }

    public List<String> getAutoGeneratedFields() throws BeanException{
        List<String> strings = new ArrayList<>();
        strings.add("id");
        strings.add("full_name");
        return strings;
    }

    @Override
    public user setNotAutoGeneratedFields(Map<String, String> fieldValues) {
        id_registration = Integer.valueOf(fieldValues.get("id_registration"));
        id_type = Integer.valueOf(fieldValues.get("id_type"));
        id_phone = Integer.valueOf(fieldValues.get("id_phone"));
        name = fieldValues.get("name");
        last_name = fieldValues.get("last_name");
        return this;
    }

    private Integer id;
    private Integer id_registration;
    private Integer id_type;
    private Integer id_phone;
    private String name;
    private String last_name;
    private String full_name;
}
